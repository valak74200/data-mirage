Titre : Data Mirage — Visualisation interactive 3D intelligente de datasets

Description :
Créer une application web interactive qui transforme n’importe quel dataset tabulaire en une visualisation 3D immersive et intuitive. Chaque ligne de données sera représentée par un objet (bulle ou point) dans un espace 3D, dont la position, couleur et taille reflètent les caractéristiques des données. L’application doit permettre d’explorer, zoomer, filtrer et détecter visuellement des clusters ou anomalies grâce à des techniques de réduction de dimensionnalité (t-SNE, UMAP) et d’algorithmes de clustering (k-Means, DBSCAN).

⸻

Fonctionnalités clés :
	1.	Import de datasets CSV/JSON
	•	Chargement et prévisualisation des données
	•	Nettoyage basique (suppression valeurs manquantes)
	2.	Traitement et préparation des données
	•	Normalisation des features numériques
	•	Encodage des variables catégorielles
	•	Réduction de dimension (t-SNE ou UMAP) pour position 3D des points
	3.	Visualisation 3D interactive
	•	Affichage des points sous forme de sphères colorées
	•	Couleur, taille, opacité paramétrables en fonction des colonnes du dataset
	•	Zoom, rotation, sélection de groupes/clusters
	•	Hover : affichage des détails du point sélectionné
	4.	Détection de clusters et anomalies
	•	Implémentation k-Means ou DBSCAN
	•	Visualisation des clusters par couleurs distinctes
	•	Mise en avant des points isolés/anormaux
	5.	Interface utilisateur
	•	Tableau de bord simple avec choix des colonnes pour axes, couleurs, tailles
	•	Filtres interactifs (ex : filtre par valeur de colonne)
	•	Export du snapshot de la visualisation

⸻

Stack technique recommandée :
	•	Backend : Python (FastAPI ou Flask) pour traitement data et API
	•	ML/Data : scikit-learn (normalisation, réduction dimension, clustering)
	•	Frontend : React + Three.js ou React Three Fiber pour la 3D
	•	Visualisation : D3.js pour UI graphique, sliders, filtres
	•	Déploiement : Docker + Cloud (Heroku, Vercel, ou AWS)

⸻

Bonus avancé (optionnel) :
	•	Intégration d’une couche RAG (Retrieval-Augmented Generation) pour expliquer les clusters
	•	Animation dynamique des données en fonction du temps (ex : séries temporelles)
	•	Support multimodal (images + texte dans dataset)